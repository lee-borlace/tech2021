name: 'Terraform'
 
on:
  push:
    branches:
    - master
  pull_request:
 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: Test
 
    defaults:
      run:
        shell: bash
        working-directory: deploy/terraform
 
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform General Init
      id: generalinit
      run: terraform init -no-color
      continue-on-error: false      

    - name: Terraform Select Workspace
      id: select
      run: terraform workspace select test -no-color
      continue-on-error: false      

    - name: Terraform Workspace Init
      id: workspaceinit
      run: terraform init -no-color
      continue-on-error: false

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: false

    - name: Ls
      id: ls
      run: find $GITHUB_WORKSPACE
      continue-on-error: false

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -var-file "$GITHUB_WORKSPACE/deploy/terraform/environments/test.tfvars"
      continue-on-error: false

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })      

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'      
      id: apply
      run: terraform apply -no-color -var-file "$GITHUB_WORKSPACE/deploy/terraform/environments/test.tfvars" -input=false -auto-approve
      continue-on-error: false